package stream;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Task2_filter {
    public static void main(String[] args) {

        /*–ó–∞–¥–∞—á–∞ 1: –û—Ç–±–æ—Ä —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª
        –£ —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞.
        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6);
        List<Integer> evenNums = numbers.stream().filter(elem -> elem %2 == 0).collect(Collectors.toList());
        System.out.println(evenNums);*/

        /*–ó–∞–¥–∞—á–∞ 2: –§–∏–ª—å—Ç—Ä –ø–æ –¥–ª–∏–Ω–µ —Å—Ç—Ä–æ–∫
        –î–∞–Ω —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –¥–ª–∏–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ 3.
        List<String> words = Arrays.asList("cat", "elephant", "dog", "tree");
        List<String> words2 = words.stream().filter(elem -> elem.length() > 3).collect(Collectors.toList());
        System.out.println(words2);*/

        /*–ó–∞–¥–∞—á–∞ 3: –û—Ç–±–æ—Ä —á–∏—Å–µ–ª –±–æ–ª—å—à–µ 10
        –£ —Ç–µ–±—è –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ 10.
        int[] numbers = {5, 12, 7, 18, 3, 21};
        numbers = Arrays.stream(numbers).filter(elem -> elem > 10).toArray();
        System.out.println(Arrays.toString(numbers));*/

        /*–ó–∞–¥–∞—á–∞ 4: –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
        –î–∞–Ω —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫, —Å—Ä–µ–¥–∏ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –ø—É—Å—Ç—ã–µ. –£–±–µ—Ä–∏ –≤—Å–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏.
        List<String> words = Arrays.asList("java", "", "stream", "", "filter");
        List<String> words2 = words.stream().filter(elem -> elem != "").collect(Collectors.toList());
        System.out.println(words2);*/

        /*–ó–∞–¥–∞—á–∞ 5: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ
        –£ —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –±—É–∫–≤—ã 'a'.
        List<String> words = Arrays.asList("apple", "banana", "apricot", "grape");
        List<String> words2 = words.stream().filter(elem -> elem.charAt(0) == 'a').collect(Collectors.toList());
        System.out.println(words2);*/

        /*–ó–∞–¥–∞—á–∞ 6: –û—Ç–±–æ—Ä –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª
        –£ —Ç–µ–±—è –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞.
        int[] numbers = {-3, 7, -1, 4, -8};
        numbers = Arrays.stream(numbers).filter(e->e < 0).toArray();
        System.out.println(Arrays.toString(numbers));*/

        /*–ó–∞–¥–∞—á–∞ 7: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —á–µ—Ç–Ω—ã–º –∏–Ω–¥–µ–∫—Å–∞–º
        –î–∞–Ω —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ —Å —á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏.
        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6);
        List<Integer> numEven = numbers.stream().filter(e -> numbers.indexOf(e) % 2 == 0).collect(Collectors.toList());
        System.out.println(numEven);*/

        /*–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —á—ë—Ç–Ω–æ—Å—Ç–∏ –∏ –¥–µ–ª–µ–Ω–∏—é –Ω–∞ 3:
        –î–∞–Ω —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ —á—ë—Ç–Ω—ã–µ –∏ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 3.
        List<Integer> numbers = Arrays.asList(3, 6, 9, 12, 15, 20);
        List<Integer> numRes = numbers.stream().filter(e -> e % 2 == 0 && e % 3 == 0).collect(Collectors.toList());
        System.out.println(numRes);*/

        /*–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–ª–∏–Ω–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ: –£ —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ:
        –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –±—É–∫–≤—ã 'a', –∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ 3.
        List<String> words = Arrays.asList("apple", "ant", "banana", "apricot", "avocado");
        List<String> words2 = words.stream().filter(e->e.charAt(0) == 'a').filter(e->e.length() > 3)
                .collect(Collectors.toList());
        System.out.println(words2);*/

        /*–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —á–∏—Å–ª–∞–º –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ:
        –î–∞–Ω –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª. –û—Å—Ç–∞–≤—å —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 10 –¥–æ 50 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
        int[] numbers = {5, 12, 7, 18, 30, 40, 60, 45};
        numbers = Arrays.stream(numbers).filter(e-> e > 10 && e < 50).toArray();
        System.out.println(Arrays.toString(numbers));*/

        /*–£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –∏ —Å—Ç—Ä–æ–∫ –¥–ª–∏–Ω–æ–π –º–µ–Ω–µ–µ 4 —Å–∏–º–≤–æ–ª–æ–≤:
        —É —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫. –£–¥–∞–ª–∏ –≤—Å–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç—Ä–æ–∫–∏, –¥–ª–∏–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –º–µ–Ω—å—à–µ 4 —Å–∏–º–≤–æ–ª–æ–≤.
        List<String> words = Arrays.asList("java", "", "stream", "", "api", "cat");
        List<String> words2 = words.stream().filter(e-> e != "" && e.length() < 4).collect(Collectors.toList());
        System.out.println(words2);*/

        /*üîπ filter()
        –û—Å—Ç–∞–≤—å –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞.
        List<Integer> nums = Arrays.asList(5,1,7,4,8,3,0,8,14,2);
        List<Integer> numsEven = nums.stream().filter(e -> e % 2 == 0).collect(Collectors.toList());
        System.out.println(numsEven);

        –£–¥–∞–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏.
        List<String> strs = Arrays.asList("d", "Dd", "", "ffs", "S", "", "", "r");
        List<String> strsRes = strs.stream().filter(e -> e != "").collect(Collectors.toList());
        System.out.println(strsRes);
         */

        /*‚úÖ filter():
        –û—Å—Ç–∞–≤—å –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å "J".
         */
        List<String> words = Arrays.asList("Java", "Python", "JavaScript", "C++");
        List<String> words2 = words.stream().filter(el -> el.charAt(0) == 'J').collect(Collectors.toList());
        System.out.println(words2);


    }
}
